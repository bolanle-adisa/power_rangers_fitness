/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prclient;

import java.util.Date;
import java.util.Properties;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;

/**
 *
 * @author bolan
 */
public class prContact extends javax.swing.JFrame {
    String emailto;
    String userTo;
    /**
     * Creates new form prContact
     */
    public prContact() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        sarahButton = new javax.swing.JButton();
        brentButton = new javax.swing.JButton();
        justineButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("POWER RANGERS FITNESS, LLC.");
        setPreferredSize(new java.awt.Dimension(850, 750));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("WANT TO SCHEDULE A WORKOUT WITH A PERSONAL TRAINER?");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("SELECT ONE OF OUR QUALIFIED TRAINERS BELOW");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("- 5 years certified PT\n- Former D1 athlete\n- 2 years highschool head coach\n- fun fact: Her favorite dessert is cake!");
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextArea2.setRows(5);
        jTextArea2.setText("- 4 years certified PT\n- Masters in Kinesiology\n- Former Collegiate Athlete \n- Known for \"Build-a-Booty\" program\n- fun fact: Has two dogs.\n");
        jScrollPane2.setViewportView(jTextArea2);

        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextArea3.setRows(5);
        jTextArea3.setText("- 7 years certified PT\n- Records Instagram workouts \n- Worked in an athletic rehab center\n for 4 years \n-fun fact: Won a 5K run in 2012\n");
        jScrollPane3.setViewportView(jTextArea3);

        sarahButton.setText("SARAH");
        sarahButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sarahButtonActionPerformed(evt);
            }
        });

        brentButton.setText("BRENT");
        brentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brentButtonActionPerformed(evt);
            }
        });

        justineButton.setText("JUSTINE");
        justineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                justineButtonActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\bolan\\Downloads\\sarahIcon.png")); // NOI18N
        jLabel3.setText("jLabel3");

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\bolan\\Downloads\\brentIcon.png")); // NOI18N
        jLabel4.setText("jLabel4");

        jLabel5.setIcon(new javax.swing.ImageIcon("C:\\Users\\bolan\\Downloads\\justineIcon.png")); // NOI18N
        jLabel5.setText("jLabel5");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("SARAH LOVELACE");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("BRENT WILSON");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("JUSTINE MARTINEZ");

        backButton.setText("<-BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(187, 187, 187)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(48, 48, 48)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel7)
                                    .addGap(47, 47, 47)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(41, 41, 41)))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(sarahButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(brentButton, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                .addGap(197, 197, 197)
                .addComponent(justineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8))
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sarahButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(justineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sarahButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sarahButtonActionPerformed
        // TODO add your handling code here:
        String userN =JOptionPane.showInputDialog(null,"Confirm name");
        String email =JOptionPane.showInputDialog(null,"Confirm Email");    
        
        final String SSL_FACTORY = "javax.net.ssl.SSLSocketFactory";
// Get a Properties object
        Properties props = System.getProperties();
        props.setProperty("mail.smtp.host", "smtp.gmail.com");
        props.setProperty("mail.smtp.socketFactory.class", SSL_FACTORY);
        props.setProperty("mail.smtp.socketFactory.fallback", "false");
        props.setProperty("mail.smtp.port", "465");//port: 465
        props.setProperty("mail.smtp.socketFactory.port", "465");
        //props.put("mail.smtp.starttls.required", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.ssl.protocols", "TLSv1.2");
        props.put("mail.smtp.auth", "true");
        props.put("mail.debug", "true");
        props.put("mail.store.protocol", "pop3");
        props.put("mail.transport.protocol", "smtp");
        final String username = "javatestba@gmail.com";//
        final String password = "@Test1234";// Change  axlzidcutlgtiilw
        try {
            Session session = Session.getDefaultInstance(props,
                    new Authenticator() {
                        protected PasswordAuthentication getPasswordAuthentication() {
                            return new PasswordAuthentication(username, password);
                        }
                    });
// -- Create a new message --
            Message msg = new MimeMessage(session);
// -- Set the FROM and TO fields --
            emailto = email;
            userTo = userN;
            System.out.println("User name: "+userTo);
            System.out.println("Email: "+emailto);
            msg.setFrom(new InternetAddress("javatestba@gmail.com"));
            msg.setRecipients(Message.RecipientType.TO,
                    InternetAddress.parse(emailto, false));
            msg.setSubject("Printed Document");

            msg.setContent("<b> Dear " + userTo +"</b>,"+ "<br><br>Thank you for reaching out, I can't wait for us to start our journey! Schedule a workout time using my availability below.<br><br>\n" +
"Monday: 4:00pm-11:00pm<br>\n" +
"Tuesday: 6:00am-12:00pm<br>\n" +
"Wednesday: 4:00pm-11:00pm<br>\n" +
"Thursday:6:00am-12:00pm<br>\n" +
"Friday:  4:00pm-11:00pm<br>\n" +
"Saturday: 6:00am-12:00pm<br><br>\n" +
"Text 512.505.3826 to confirm your time.<br><br>\n" +
"<b>Sarah Lovelace.<br></b>",
                    "text/html");
            msg.setSentDate(new Date());
            Transport.send(msg);
            System.out.println("Message sent.");
        } catch (MessagingException eX) {
            System.out.println("Error when mailing, cause: " + eX);
        }
        catch(Exception es){
            
        }

    }//GEN-LAST:event_sarahButtonActionPerformed

    private void brentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brentButtonActionPerformed
        // TODO add your handling code here:
        String userN =JOptionPane.showInputDialog(null,"Confirm name");
        String email =JOptionPane.showInputDialog(null,"Confirm Email");    
        
        final String SSL_FACTORY = "javax.net.ssl.SSLSocketFactory";
// Get a Properties object
        Properties props = System.getProperties();
        props.setProperty("mail.smtp.host", "smtp.gmail.com");
        props.setProperty("mail.smtp.socketFactory.class", SSL_FACTORY);
        props.setProperty("mail.smtp.socketFactory.fallback", "false");
        props.setProperty("mail.smtp.port", "465");//port: 465
        props.setProperty("mail.smtp.socketFactory.port", "465");
        //props.put("mail.smtp.starttls.required", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.ssl.protocols", "TLSv1.2");
        props.put("mail.smtp.auth", "true");
        props.put("mail.debug", "true");
        props.put("mail.store.protocol", "pop3");
        props.put("mail.transport.protocol", "smtp");
        final String username = "javatestba@gmail.com";//
        final String password = "@Test1234";// Change  axlzidcutlgtiilw
        try {
            Session session = Session.getDefaultInstance(props,
                    new Authenticator() {
                        protected PasswordAuthentication getPasswordAuthentication() {
                            return new PasswordAuthentication(username, password);
                        }
                    });
// -- Create a new message --
            Message msg = new MimeMessage(session);
// -- Set the FROM and TO fields --
            emailto = email;
            userTo = userN;
            System.out.println("User name: "+userTo);
            System.out.println("Email: "+emailto);
            msg.setFrom(new InternetAddress("javatestba@gmail.com"));
            msg.setRecipients(Message.RecipientType.TO,
                    InternetAddress.parse(emailto, false));
            msg.setSubject("Printed Document");

            msg.setContent("<b> Dear " + userTo +"</b>,"+ "<br><br>Thank you for reaching out, I can't wait for us to start our journey! Schedule a workout time using my availability below.<br><br>\n" +
"Monday: 2:00pm-7:00pm<br>\n" +
"Tuesday: 9:00am-2:00pm<br>\n" +
"Wednesday: 2:00pm-7:00pm<br>\n" +
"Thursday:9:00am-2:00pm<br>\n" +
"Friday:  2:00pm-7:00pm<br>\n" +
"Saturday: 9:00am-2:00pm<br><br>\n" +
"Text 512.847.6457 to confirm your time.<br><br>\n" +
"<b>Brent Wilson.<br></b>",
                    "text/html");
            msg.setSentDate(new Date());
            Transport.send(msg);
            System.out.println("Message sent.");
        } catch (MessagingException eX) {
            System.out.println("Error when mailing, cause: " + eX);
        }
        catch(Exception es){
            
        }
    }//GEN-LAST:event_brentButtonActionPerformed

    private void justineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_justineButtonActionPerformed
        // TODO add your handling code here:
        String userN =JOptionPane.showInputDialog(null,"Confirm name");
        String email =JOptionPane.showInputDialog(null,"Confirm Email");    
        
        final String SSL_FACTORY = "javax.net.ssl.SSLSocketFactory";
// Get a Properties object
        Properties props = System.getProperties();
        props.setProperty("mail.smtp.host", "smtp.gmail.com");
        props.setProperty("mail.smtp.socketFactory.class", SSL_FACTORY);
        props.setProperty("mail.smtp.socketFactory.fallback", "false");
        props.setProperty("mail.smtp.port", "465");//port: 465
        props.setProperty("mail.smtp.socketFactory.port", "465");
        //props.put("mail.smtp.starttls.required", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.ssl.protocols", "TLSv1.2");
        props.put("mail.smtp.auth", "true");
        props.put("mail.debug", "true");
        props.put("mail.store.protocol", "pop3");
        props.put("mail.transport.protocol", "smtp");
        final String username = "javatestba@gmail.com";//
        final String password = "@Test1234";// Change  axlzidcutlgtiilw
        try {
            Session session = Session.getDefaultInstance(props,
                    new Authenticator() {
                        protected PasswordAuthentication getPasswordAuthentication() {
                            return new PasswordAuthentication(username, password);
                        }
                    });
// -- Create a new message --
            Message msg = new MimeMessage(session);
// -- Set the FROM and TO fields --
            emailto = email;
            userTo = userN;
            System.out.println("User name: "+userTo);
            System.out.println("Email: "+emailto);
            msg.setFrom(new InternetAddress("javatestba@gmail.com"));
            msg.setRecipients(Message.RecipientType.TO,
                    InternetAddress.parse(emailto, false));
            msg.setSubject("Printed Document");

            msg.setContent("<b> Dear " + userTo +"</b>,"+ "<br><br>Thank you for reaching out, I can't wait for us to start our journey! Schedule a workout time using my availability below.<br><br>\n" +
"Monday: 1:00pm-5:00pm<br>\n" +
"Tuesday: 7:00am-10:00am<br>\n" +
"Wednesday: 1:00pm-5:00pm<br>\n" +
"Thursday:7:00am-10:00am<br>\n" +
"Friday:  1:00pm-5:00pm<br>\n" +
"Saturday: 7:00am-10:00am<br><br>\n" +
"Text 512.193.1938 to confirm your time.<br><br>\n" +
"<b>Justine Martinez.<br></b>",
                    "text/html");
            msg.setSentDate(new Date());
            Transport.send(msg);
            System.out.println("Message sent.");
        } catch (MessagingException eX) {
            System.out.println("Error when mailing, cause: " + eX);
        }
        catch(Exception es){
            
        }
    }//GEN-LAST:event_justineButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        new prHomepage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(prContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(prContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(prContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(prContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new prContact().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton brentButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JButton justineButton;
    private javax.swing.JButton sarahButton;
    // End of variables declaration//GEN-END:variables
}
